[{"path":[]},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement garrissm@wfu.edu. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing Guidelines for ggpedigree","title":"Contributing Guidelines for ggpedigree","text":"Thank considering contributing ggpedigree. document outlines process best practices contributing R package hosted GitHub R Computing Lab. ## Table Contents Code Conduct Getting Started Bug Reports Feature Requests Pull Requests Code Style Testing Documentation Communication","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing Guidelines for ggpedigree","text":"contributors expected adhere project’s Code Conduct. Please read carefully contributing.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Contributing Guidelines for ggpedigree","text":"Fork ggpedigree repository GitHub account. Clone forked repository local machine. Install required packages set development environment.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"bug-reports","dir":"","previous_headings":"","what":"Bug Reports","title":"Contributing Guidelines for ggpedigree","text":"reporting bugs, please create issue GitHub repository. Make sure : Provide clear title description. Include minimal reproducible example. Tag issue “bug” label.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"feature-requests","dir":"","previous_headings":"","what":"Feature Requests","title":"Contributing Guidelines for ggpedigree","text":"New features welcome. request new feature: Open issue GitHub repository. Clearly describe feature potential benefits. Tag issue “feature request” label.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing Guidelines for ggpedigree","text":"Fork repository create new branch work. Commit changes logical chunks. Open pull request clear title description. Make sure existing tests pass. Add new tests changes.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"","what":"Code Style","title":"Contributing Guidelines for ggpedigree","text":"Follow Tidyverse Style Guide R programming maintain code consistency.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Contributing Guidelines for ggpedigree","text":"Tests implemented using testthat package. Make sure add new tests added functionality. Run tests ensure pass submitting pull request.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Contributing Guidelines for ggpedigree","text":"Update README.Rmd relevant documentation. Use roxygen2 documenting functions. Include examples documentation possible.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/CONTRIBUTING.html","id":"communication","dir":"","previous_headings":"","what":"Communication","title":"Contributing Guidelines for ggpedigree","text":"Use GitHub issues communication. direct communication, can contact maintainers. contributing, agree abide guidelines project’s Code Conduct. Thank contributing ggpedigree!","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Jonathan D. Trattner  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. BGmisc Copyright (C) 2020 Jonathan D. Trattner This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting pedigrees with ggPedigree()","text":"vignette demonstrates pedigree visualization ggPedigree() ggpedigree. Pedigree plots central fields like human genetics, behavioral science, genealogy, understanding lineage familial relationships informs diagnosis, analysis, interpretation. ggPedigree() builds ggplot2 kinship2, leveraging modular helpers BGmisc ggpedigree streamline plot generation retaining full aesthetic flexibility. Unlike base R pedigree tools, package returns ggplot2 object, meaning users can customize output using familiar ggplot2 syntax, themes, scales, layering. Throughout vignette, walk basic usage, layout control, status overlays, aesthetic customization, faceting multifamily visualization. use two bundled example datasets (BGmisc) illustrate package’s capabilities. first dataset, potter, contains fictional wizarding family tree, second dataset, hazard, includes multigenerational historical pedigree affected/unaffected status.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Plotting pedigrees with ggPedigree()","text":"begin loading required libraries. include main plotting package ggpedigree, helper utilities BGmisc, supporting tools aesthetic data manipulation. simplest usage requires data frame column names family individual IDs. ’s basic pedigree plot using potter data:  Behind scenes, ggPedigree(): reshapes data family (ped2fam()), recodes sex (e.g., 0/1/NA) semantic labels via recodeSex() extracts layout grid calculateCoordinates() builds connection segments spouses, siblings, parents, offspring calculateConnections() result returned ggplot2 object, allows immediate post-processing standard ggplot syntax.","code":"library(ggpedigree) # ggPedigree lives here library(BGmisc) # helper utilities & example data library(ggplot2) # ggplot2 for plotting library(viridis) # viridis for color palettes library(tidyverse) # for data wrangling data(\"potter\") ggPedigree(potter,   famID = \"famID\",   personID = \"personID\" )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"customizing-aesthetics","dir":"Articles","previous_headings":"","what":"Customizing Aesthetics","title":"Plotting pedigrees with ggPedigree()","text":"appearance settings managed config list, allows fine-tuned customization. options omitted, fall back predefined defaults. example, can turn sex-based fill color assign specific colors connection segments:  ggplot2 object, theming labeling can applied using layers themes. instance:  can particularly useful matching house styles academic publications removing clutter presentations.","code":"ggPedigree(   potter,   famID = \"famID\",   personID = \"personID\",   config = list(     code_male = 1, # Here, 1 = male, 0 = female     sex_color = FALSE,     line_width = 1,     segment_spouse_color = viridis_pal()(5)[1],     segment_sibling_color = viridis_pal()(5)[2],     segment_parent_color = viridis_pal()(5)[3],     segment_offspring_color = viridis_pal()(5)[4],     outline = TRUE,     outline_color = viridis_pal()(5)[5]   ) ) ggPedigree(potter,   famID = \"famID\",   personID = \"personID\" ) +   theme_bw(base_size = 12)"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"labeling-individuals","dir":"Articles","previous_headings":"Customizing Aesthetics","what":"Labeling Individuals","title":"Plotting pedigrees with ggPedigree()","text":"can also label individuals pedigree using label_method argument. default geom_label_repel(), uses ggrepel package avoid overlapping labels. can also use geom_text() simpler labeling. configurable options include label_col label column, label_text_angle text rotation, label_nudge_y vertical adjustment, label_nudge_x horizontal adjustment.","code":"ggPedigree(   potter,   famID = \"famID\",   personID = \"personID\",   config = list(     label_col = \"name\",     label_text_angle = -45,     label_nudge_y = -.25,     label_nudge_x = 0.45,     label_method = \"geom_text\",     sex_color = TRUE   ) )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"overlaying-status-information","dir":"Articles","previous_headings":"","what":"Overlaying Status Information","title":"Plotting pedigrees with ggPedigree()","text":"many applied settings, pedigrees include binary phenotypes affected/unaffected status. incorporate , use status_col argument point column containing relevant variable.  status_col argument allows specify column identifies affected/unaffected individuals. column factor character vector; , ggPedigree() coerce . behavior differs depending whether sex_color also enabled: sex_color = TRUE, affected individuals overlaid shape (controlled affected_shape), preserving fill color sex. sex_color = FALSE, affected unaffected individuals instead colored status, using default fill scale. can control values interpreted via affected unaffected parameters config. default, TRUE considered affected FALSE unaffected.","code":"data(\"hazard\")  p <- ggPedigree(   hazard,   famID = \"famID\",   personID = \"ID\",   status_col = \"affected\",   config = list(     code_male = 0,     sex_color = TRUE,     status_affected_lab = TRUE,     status_unaffected_lab = FALSE,     status_affected_shape = 4   ) )  p ggPedigree(   hazard,   famID = \"famID\",   personID = \"ID\",   status_col = \"affected\",   config = list(     code_male = 0,     sex_color = FALSE,     status_affected_lab = TRUE,     status_unaffected_lab = FALSE   ) )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"highlighting-specific-individuals","dir":"Articles","previous_headings":"Overlaying Status Information","what":"Highlighting Specific Individuals","title":"Plotting pedigrees with ggPedigree()","text":"can also highlight specific individuals pedigree creating new column data frame. example, want highlight Harry Potter Dudley Dursley, can create new column called proband set TRUE individuals. can specify affected_shape star shape (8) use status_col argument indicate probands.","code":"df <- potter  df <- df %>%   mutate(proband = ifelse(name %in% c(\"Harry Potter\", \"Dudley Dursley\"), TRUE, FALSE))  ggPedigree(   df,   famID = \"famID\",   personID = \"personID\",   status_col = \"proband\",   config = list(     sex_color = TRUE,     status_affected_lab = TRUE,     status_unaffected_lab = FALSE,     status_affected_shape = 8 # star shape   ) )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"multiple-families-in-one-graphic","dir":"Articles","previous_headings":"","what":"Multiple families in one graphic","title":"Plotting pedigrees with ggPedigree()","text":"multiple families data frame, can use facet_wrap() function ggplot2 create separate plots family. useful want compare pedigrees different families side side. Note can use scales = \"free_x\" allow family x-axis scale.","code":"p +   facet_wrap(~famID, scales = \"free_x\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"adjusting-plot-appearance","dir":"Articles","previous_headings":"","what":"Adjusting Plot Appearance","title":"Plotting pedigrees with ggPedigree()","text":"layout appearance can refined using theme() elements. doesn’t change pedigree structure helps declutter visualization.","code":"p +   theme_bw(base_size = 12) +   theme(     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_blank(),     axis.line        = element_line(colour = \"black\"),     axis.text.x      = element_blank(),     axis.text.y      = element_blank(),     axis.ticks.x     = element_blank(),     axis.ticks.y     = element_blank(),     axis.title.x     = element_blank(),     axis.title.y     = element_blank()   ) + scale_color_viridis(     discrete = TRUE,     labels = c(\"Female\", \"Male\", \"Unknown\")   ) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"advanced-example-large-pedigrees-with-self-loops","dir":"Articles","previous_headings":"","what":"Advanced Example: Large Pedigrees with self-loops","title":"Plotting pedigrees with ggPedigree()","text":"section, demonstrate create complex pedigree plot multiple families. use inbreeding dataset BGmisc package, contains several multigenerational pedigrees consanguinity. Note plots individuals may appear multiple places within pedigree. common large pedigrees, especially overlapping generations multiple marriages. colors set segments, except self-loops, colored purple.","code":"library(BGmisc) # helper utilities & example data  data(\"inbreeding\")   df <- inbreeding # multigenerational pedigree with consanguinity   # df  <- dplyr::filter(df, famID %in% c(5, 7))   p <- ggPedigree(   df,   famID = \"famID\",   personID = \"ID\",   status_col = \"proband\",   #  debug = TRUE,   config = list(     code_male = 0,     sex_color = FALSE,     status_affected_lab = TRUE,     status_unaffected_lab = FALSE,     generation_height = 4,     generation_width = 2,     status_affected_shape = 4,     segment_self_color = \"purple\"   ) )  p + facet_wrap(~famID, scales = \"free\") #+ scale_color_viridis( #   discrete = TRUE, #   labels = c(\"TRUE\", \"FALSE\") #  )  + theme_bw(base_size = 14)  +  guides(colour=\"none\", shape=\"none\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"example-constructing-custom-pedigrees-for-publication","dir":"Articles","previous_headings":"","what":"Example: Constructing Custom Pedigrees for Publication","title":"Plotting pedigrees with ggPedigree()","text":"demonstrate create custom pedigree using ggpedigree package. data shown generated using simulatePedigree() function {BGmisc} package, parent package {ggpedigree}. simulated pedigrees used study evaluating statistical power estimation bias variance decomposition model includes mitochondrial DNA (mtDNA) effects. simulation generated thousands extended pedigree structures varying depth, sibship size, mating structure, maternal lineage overlap. example shows one simulated pedigrees version included final manuscript: Detecting mtDNA effects Extended Pedigree Model: Analysis Statistical Power Estimation Bias Xuanyu Lyu, S. Alexandra Burt, Michael D. Hunter, Rachel Good, Sarah L. Carroll, S. Mason Garrison Preprint available : https://doi.org/10.1101/2024.12.19.629449 structure includes multiple generations, sibling sets, overlapping parental lineages, chosen illustrate complexity simulated pedigrees used power study.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"preparing-the-data","dir":"Articles","previous_headings":"Example: Constructing Custom Pedigrees for Publication","what":"Preparing the data","title":"Plotting pedigrees with ggPedigree()","text":"row represents one individual. Variables include personID, momID, dadID, sex, famID. proband variable included demonstrate status overlays. plotting, normalize identifiers family 1 avoid ID collisions across families.","code":"library(tibble) library(dplyr) pedigree_df <- tribble(   ~personID, ~momID, ~dadID, ~sex, ~famID,   10011, NA, NA, 0, 1,   10012, NA, NA, 1, 1,   10021, NA, NA, 1, 1,   10022, 10011, 10012, 1, 1,   10023, 10011, 10012, 0, 1,   10024, NA, NA, 0, 1,   10025, NA, NA, 0, 1,   10026, 10011, 10012, 0, 1,   10027, 10011, 10012, 1, 1,   10031, 10023, 10021, 0, 1,   10032, 10023, 10021, 1, 1,   10033, 10023, 10021, 1, 1,   10034, 10023, 10021, 1, 1,   10035, 10023, 10021, 0, 1,   10036, 10024, 10022, 1, 1,   10037, 10024, 10022, 0, 1,   10038, 10025, 10027, 1, 1,   10039, 10025, 10027, 0, 1,   10310, 10025, 10027, 1, 1,   10311, 10025, 10027, 1, 1,   10312, 10025, 10027, 0, 1,   10011, NA, NA, 0, 2,   10012, NA, NA, 1, 2,   10021, NA, NA, 0, 2,   10022, 10011, 10012, 0, 2,   10023, 10011, 10012, 1, 2,   10024, 10011, 10012, 1, 2,   10025, NA, NA, 1, 2,   10026, 10011, 10012, 0, 2,   10027, NA, NA, 1, 2,   10031, 10021, 10023, 1, 2,   10032, 10021, 10023, 0, 2,   10033, 10021, 10023, 1, 2,   10034, 10022, 10025, 0, 2,   10035, 10022, 10025, 0, 2,   10036, 10022, 10025, 1, 2,   10310, 10022, 10025, 1, 2,   10037, 10026, 10027, 0, 2,   10038, 10026, 10027, 0, 2,   10039, 10026, 10027, 0, 2,   10311, 10026, 10027, 1, 2,   10312, 10026, 10027, 1, 2 ) %>%   mutate(     cleanpersonID = personID - 10000,     personID = ifelse(famID == 1, personID - 10000, personID),     momID = ifelse(famID == 1 & !is.na(momID), momID - 10000, momID),     dadID = ifelse(famID == 1 & !is.na(dadID), dadID - 10000, dadID),     proband = case_when(       personID %in% c(11, 22, 23, 26, 27, 31, 32, 33, 34, 35) ~ TRUE,       personID %in% c(         10011, 10022, 10022, 10023, 10024, 10026,         10034, 10035, 10036, 10310,         10037, 10038, 10039, 10311,         10312       ) ~ TRUE,       TRUE ~ FALSE     )   )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v0_plots.html","id":"plotting-the-pedigree","dir":"Articles","previous_headings":"Example: Constructing Custom Pedigrees for Publication","what":"Plotting the pedigree","title":"Plotting pedigrees with ggPedigree()","text":"finish adjusting legend shape scale visual clarity:","code":"p <- ggPedigree(   pedigree_df,   famID = \"famID\",   personID = \"personID\",   status_col = \"proband\",   #  debug = TRUE,   config = list(     code_male = 1,     sex_color = FALSE,     apply_default_scales = FALSE,     label_method = \"geom_text\",     label_col = \"cleanpersonID\",     status_affected_lab = TRUE,     status_unaffected_lab = FALSE,     generation_height = 1,     generation_width = 1,     status_affected_shape = 4,     segment_spouse_color = \"black\",     segment_sibling_color = \"black\",     segment_parent_color = \"black\",     segment_offspring_color = \"black\"   ) ) p + scale_shape_manual(   values = c(16, 15, 15),   labels = c(\"Female\", \"Male\", \"Unknown\") ) +   guides(shape = \"none\") + scale_color_viridis(     discrete = TRUE,     labels = c(\"TRUE\", \"FALSE\"),     name = \"Founding MtDNA Line\"   ) +   facet_wrap(~famID, scales = \"free\", shrink = TRUE) +   theme(     strip.text = element_blank(),     legend.position = \"bottom\"   )"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"ggPedigreeInteractive() function extends static pedigree plots generated ggPedigree() fully interactive Plotly widgets. allows users explore pedigree data dynamic way, features hover text, zooming, panning. vignette walks : - Basic usage ggPedigreeInteractive() - Customizing interactive plot - Adding tooltips additional information","code":"# Load required packages library(BGmisc) # ships the sample 'potter' pedigree library(ggplot2) # used internally by ggPedigree* library(viridis) # viridis for color palettes #> Loading required package: viridisLite library(plotly) # conversion layer for interactivity #>  #> Attaching package: 'plotly' #> The following object is masked from 'package:ggplot2': #>  #>     last_plot #> The following object is masked from 'package:stats': #>  #>     filter #> The following object is masked from 'package:graphics': #>  #>     layout library(ggpedigree) # the package itself"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"package includes small toy pedigree Harry Potter universe:","code":"# Load the example data data(\"potter\") # Display the first few rows of the dataset head(potter) #>   personID famID             name gen momID dadID spouseID sex #> 1        1     1   Vernon Dursley   1   101   102        3   1 #> 2        2     1 Marjorie Dursley   1   101   102       NA   0 #> 3        3     1    Petunia Evans   1   103   104        1   0 #> 4        4     1       Lily Evans   1   103   104        5   0 #> 5        5     1     James Potter   1    NA    NA        4   1 #> 6        6     1   Dudley Dursley   2     3     1       NA   1"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"minimal call just: …usually want identify core primary‑key columns advance:","code":"ggPedigreeInteractive(potter) plt <- ggPedigreeInteractive(   potter,   famID    = \"famID\",   personID = \"personID\",   momID    = \"momID\",   dadID    = \"dadID\" ) |> plotly::hide_legend() plt"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"customising-labels-and-tooltips","dir":"Articles","previous_headings":"","what":"Customising labels and tool‑tips","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"ggPedigreeInteractive() accepts config list ggPedigree(), plus tooltip_cols argument hover text. enable node labels, nudge upward little, color sex, show personID name fields hover:","code":"plt <- ggPedigreeInteractive(   potter,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   config = list(     label_nudge_y   = -.25,     include_labels  = TRUE,     label_method    = \"geom_text\",     sex_color       = TRUE   ),   tooltip_cols = c(\"personID\", \"name\") ) plt"},{"path":[]},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"adding-tooltips","dir":"Articles","previous_headings":"Further customisation","what":"Adding tooltips","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"function returns Plotly object, can layer additional modifications top: can also save widget standalone HTML:","code":"plt2 <- plt %>%   plotly::layout(     title = \"The Potter Family Tree (interactive)\",     hoverlabel = list(bgcolor = \"white\"),     margin = list(l = 50, r = 50, t = 50, b = 50)   ) %>%   plotly::config(displayModeBar = TRUE) plt2 htmlwidgets::saveWidget(   plt,   file = \"potter_interactive.html\",   selfcontained = TRUE ) # Note: The above code will save the widget in the current working directory."},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"static-plot-customisation","dir":"Articles","previous_headings":"Further customisation","what":"Static Plot customisation","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"can also create static version plot using return_static argument. useful generating high-quality images reports publications. static plot can customized using ggplot2 functions. can also plotted using plotly::ggplotly() retain interactivity. static plot can customized using ggplot2 functions.  can also convert static plot back interactive plot using plotly::ggplotly():","code":"static <- ggPedigreeInteractive(   potter,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   config = list(     label_nudge_y = -.25,     include_labels = TRUE,     label_method = \"geom_text\",     sex_color = TRUE,     return_static = TRUE   ),   tooltip_cols = c(\"personID\", \"name\") ) static_plot <- static +   ggplot2::labs(     title = \"The Potter Family Tree (static)\",     subtitle = \"This is a static plot\"   ) +   theme_bw(base_size = 12) +   theme(     panel.grid.major = element_blank(),     panel.grid.minor = element_blank(),     panel.background = element_blank(),     axis.line        = element_line(colour = \"black\"),     axis.text.x      = element_blank(),     axis.text.y      = element_blank(),     axis.ticks.x     = element_blank(),     axis.ticks.y     = element_blank(),     axis.title.x     = element_blank(),     axis.title.y     = element_blank()   ) + scale_color_viridis(     discrete = TRUE,     labels = c(\"Female\", \"Male\", \"Unknown\")   ) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale.  static_plot plt2 <- plotly::ggplotly(static_plot,   tooltip = \"text\",   width   = NULL,   height  = NULL ) plt2"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v1_interactiveplots.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Interactive Pedigree Plotting with ggPedigreeInteractive()","text":"ggPedigreeInteractive() provides powerful way visualize pedigree data interactively. leveraging capabilities Plotly, users can explore data dynamic engaging manner. function designed flexible, allowing customization labels, tooltips, overall aesthetics.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"vignette demonstrates calculate visualize relatedness matrices animal pedigrees using functions BGmisc ggpedigree packages. focus Kluane Red Squirrel Project data, workflow generalizes pedigree dataset. ggRelatednessMatrix function new addition ggpedigree package, provides flexible visually appealing way explore patterns genetic mitochondrial relatedness within families. function designed work seamlessly ped2add ped2mit functions BGmisc package, calculate additive genetic mitochondrial relatedness matrices, respectively. use new ggRelatednessMatrix function create ggplot2-based heatmaps relatedness matrices, inspired approaches original squirrel population analyses.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"data-preparation","dir":"Articles","previous_headings":"Introduction","what":"Data Preparation","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"First, load pedigree data required libraries. example data life‐history reproductive metrics 7,799 individual red squirrels Kluane Red Squirrel Project (1987–present). See redsquirrels data documentation details.","code":"library(ggpedigree) # Load the example data data(\"redsquirrels\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"calculating-relatedness-matrices","dir":"Articles","previous_headings":"","what":"Calculating Relatedness Matrices","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"show compute additive genetic mitochondrial relatedness matrices target family, red squirrel analysis.","code":"sumped <- summarizePedigrees(redsquirrels,   famID = \"famID\",   personID = \"personID\",   nbiggest = 5 )   # Set target family for visualization fam_filter <- sumped$biggest_families$famID[3]  # Filter for the largest family, recode sex if needed ped_filtered <- redsquirrels %>%   recodeSex(code_female = \"F\") %>%   filter(famID == fam_filter)  # Calculate relatedness matrices add_mat <- ped2add(ped_filtered, isChild_method = \"partialparent\", sparse = FALSE) mit_mat <- ped2mit(ped_filtered, isChild_method = \"partialparent\", sparse = FALSE)"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"visualizing-relatedness-matrices","dir":"Articles","previous_headings":"","what":"Visualizing Relatedness Matrices","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"ggRelatednessMatrix function plots relatedness matrix heatmap, options clustering color customization. show create static plot additive genetic relatedness matrix.","code":"p_add <- ggRelatednessMatrix(   add_mat,   config = list(     color_palette = c(\"white\", \"orange\", \"red\"),     scale_midpoint = 0.55,     cluster = TRUE,     title = \"Additive Genetic Relatedness\",     text_size = 5   ) )  p_add"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"plot-interactively","dir":"Articles","previous_headings":"Visualizing Relatedness Matrices","what":"Plot Interactively","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"plot mitochondrial relatedness matrix custom color palette interactive features. Dragging mouse plot show relatedness value pair individuals. can also zoom using mouse wheel clicking dragging.","code":"p_mit <- ggRelatednessMatrix(   mit_mat,   interactive = TRUE,   config = list(     color_palette = c(\"white\", \"skyblue\", \"darkblue\"),     scale_midpoint = 0.55,     cluster = TRUE,     title = \"Mitochondrial Relatedness\",     text_size = 6,     as_widget = TRUE   ) ) p_mit"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"customization-options","dir":"Articles","previous_headings":"","what":"Customization Options","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"can adjust clustering, color scales, labels, using config list. example, turn clustering:","code":"p_add_noclust <- ggRelatednessMatrix(   add_mat,   config = list(cluster = FALSE, title = \"Additive Relatedness (No Clustering)\") ) p_add_noclust"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"comparison-to-base-r-and-other-approaches","dir":"Articles","previous_headings":"","what":"Comparison to Base R and Other Approaches","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"comparison, matrix plotted corrplot, earlier squirrel analyses:","code":"if (requireNamespace(\"corrplot\", quietly = TRUE)) {   corrplot::corrplot(     as.matrix(add_mat),     method = \"color\",     type = \"lower\",     col.lim = c(0, 1.25),     is.corr = FALSE,     title = \"Additive Relatedness\",     order = \"hclust\",     col = corrplot::COL1(\"Reds\", 100),     tl.pos = \"l\", tl.col = \"black\", tl.srt = 5, tl.cex = 0.2,     mar = c(0, 0, 2, 0)   ) }"},{"path":"https://r-computing-lab.github.io/ggpedigree/articles/v2_matrix.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Visualizing Relatedness Matrices with ggRelatednessMatrix()","text":"ggRelatednessMatrix function provides flexible visually appealing way explore patterns genetic mitochondrial relatedness within families. workflow integrates seamlessly tools BGmisc ggpedigree, supporting reproducible, publication-quality visualization quantitative genetic analysis.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"S. Mason Garrison. Author, maintainer, copyright holder.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garrison S (05.20.2025). ggpedigree: Visualizing Pedigrees 'ggplot2' 'plotly'. R package version 0.4.0, https://github.com/R-Computing-Lab/ggpedigree/.","code":"@Manual{,   title = {ggpedigree: Visualizing Pedigrees with 'ggplot2' and 'plotly'},   author = {S. Mason Garrison},   year = {05.20.2025},   note = {R package version 0.4.0},   url = {https://github.com/R-Computing-Lab/ggpedigree/}, }"},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"ggpedigree","dir":"","previous_headings":"","what":"Visualizing Pedigrees with ggplot2 and plotly","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"ggpedigree provides modern tools visualizing pedigree structures using ‘ggplot2’ ‘plotly’. designed work seamlessly BGmisc package simulated empirical pedigree data, extends plotting capabilities base-graphics functions kinship2. package supports: Static, publication-ready pedigree plots using ggplot2 framework Interactive pedigree visualizations using plotly Layout customization, complex mating structures, duplicated individuals ggpedigree useful behavior genetics, kinship analysis, research involving complex pedigree data.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"can install released version ggpedigree CRAN : install development version ggpedigree GitHub use:","code":"install.packages(\"ggpedigree\") # install.packages(\"devtools\") devtools::install_github(\"R-Computing-Lab/ggpedigree\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"use ggpedigree research wish refer , please cite following: Garrison S (05.16.2025). ggpedigree: Visualizing Pedigrees ‘ggplot2’ ‘plotly’. R package version 0.4.0, https://github.com/R-Computing-Lab/ggpedigree/. BibTeX entry LaTeX users ","code":"citation(package = \"ggpedigree\") @Manual{,   title = {ggpedigree: Visualizing Pedigrees with 'ggplot2' and 'plotly'},   author = {S. Mason Garrison},   year = {05.16.2025},   note = {R package version 0.4.0},   url = {https://github.com/R-Computing-Lab/ggpedigree/}, }"},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"Contributions ggpedigree project welcome. guidelines contribute, please refer Contributing Guidelines. Issues pull requests submitted GitHub repository. support, please use GitHub issues page.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"branching-and-versioning-system","dir":"","previous_headings":"Contributing","what":"Branching and Versioning System","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"development ggpedigree follows GitFlow branching strategy: Feature Branches: major changes new features developed separate branches created dev branch. Name branches according feature change meant address. dev: branch final integration stage changes merged main branch. considered stable, well-tested features updates ready next release cycle merged . Main Branch (main): main branch mirrors stable state project seen CRAN. fully tested approved changes dev_main branch merged main prepare new release.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Visualizing Pedigrees with ggplot2 and plotly","text":"ggpedigree licensed GNU General Public License v3.0. details, see LICENSE.md file.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/buildSpouseSegments.html","id":null,"dir":"Reference","previous_headings":"","what":"Build spouse segments — buildSpouseSegments","title":"Build spouse segments — buildSpouseSegments","text":"Build spouse segments","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/buildSpouseSegments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build spouse segments — buildSpouseSegments","text":"","code":"buildSpouseSegments(ped, connections_for_FOO, use_hash = TRUE)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/buildSpouseSegments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build spouse segments — buildSpouseSegments","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns connections_for_FOO data frame containing connections spouse segments use_hash Logical. TRUE, use parent_hash build segments. FALSE, use spouseID.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/buildSpouseSegments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build spouse segments — buildSpouseSegments","text":"data frame spouse segments","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateConnections.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate connections for a pedigree dataset — calculateConnections","title":"Calculate connections for a pedigree dataset — calculateConnections","text":"Computes graphical connection paths pedigree layout, including parent-child, sibling, spousal connections. Optionally processes duplicate appearances individuals (marked `extra`) ensure relational accuracy.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateConnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate connections for a pedigree dataset — calculateConnections","text":"","code":"calculateConnections(ped, config = list())"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateConnections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate connections for a pedigree dataset — calculateConnections","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns config List configuration parameters. Currently unused passed internal helpers.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateConnections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate connections for a pedigree dataset — calculateConnections","text":"`data.frame` containing connection points midpoints graphical rendering. Includes: `x_pos`, `y_pos`: positions focal individual `x_dad`, `y_dad`, `x_mom`, `y_mom`: parental positions (available) `x_spouse`, `y_spouse`: spousal positions (available) `x_midparent`, `y_midparent`: midpoint parents `x_mid_sib`, `y_mid_sib`: sibling group midpoint `x_mid_spouse`, `y_mid_spouse`: midpoint spouses","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coordinates for plotting individuals in a pedigree — calculateCoordinates","title":"Calculate coordinates for plotting individuals in a pedigree — calculateCoordinates","text":"Extracts modifies x y positions individual pedigree data frame using align.pedigree function `kinship2` package. returns data.frame positions plotting.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coordinates for plotting individuals in a pedigree — calculateCoordinates","text":"","code":"calculateCoordinates(   ped,   personID = \"ID\",   momID = \"momID\",   dadID = \"dadID\",   spouseID = \"spouseID\",   sexVar = \"sex\",   code_male = NULL,   config = list() )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coordinates for plotting individuals in a pedigree — calculateCoordinates","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns personID Character string specifying column name individual IDs. momID Character string specifying column name mother IDs. Defaults \"momID\". dadID Character string specifying column name father IDs. Defaults \"dadID\". spouseID Character. Name column `ped` spouse ID variable. sexVar Character. Name column `ped` sex variable. code_male Value used indicate male sex. Defaults NULL. config List configuration options: code_male Default 1. Used BGmisc::recodeSex(). ped_packed Logical, default TRUE. Passed `kinship2::align.pedigree`. ped_align Logical, default TRUE. Align generations. ped_width Numeric, default 15. Controls spacing.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/calculateCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coordinates for plotting individuals in a pedigree — calculateCoordinates","text":"data frame one rows per person, containing: `x_order`, `y_order`: Grid indices representing layout rows columns. `x_pos`, `y_pos`: Continuous coordinate positions used plotting. `nid`: Internal numeric identifier layout mapping. `extra`: Logical flag indicating whether row secondary appearance.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/computeDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance between two points — computeDistance","title":"Compute distance between two points — computeDistance","text":"function calculates distance two points 2D space using Minkowski distance. can used compute Euclidean Manhattan distance. utility function calculating distances pedigree layouts. Defaults Euclidean distance method specified.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/computeDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance between two points — computeDistance","text":"","code":"computeDistance(method = \"euclidean\", x1, y1, x2, y2, p = NULL)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/computeDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance between two points — computeDistance","text":"method Character. Method distance calculation. Options \"euclidean\", \"cityblock\", \"Minkowski\". x1 Numeric. X-coordinate first point. y1 Numeric. Y-coordinate first point. x2 Numeric. X-coordinate second point. y2 Numeric. Y-coordinate second point. p Numeric. order Minkowski distance. NULL, defaults 2 Euclidean 1 Manhattan. Minkowski method used, p specified.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countOffspring.html","id":null,"dir":"Reference","previous_headings":"","what":"Count offspring of each individual — countOffspring","title":"Count offspring of each individual — countOffspring","text":"Count offspring individual","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countOffspring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count offspring of each individual — countOffspring","text":"","code":"countOffspring(ped, personID = \"ID\", momID = \"momID\", dadID = \"dadID\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countOffspring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count offspring of each individual — countOffspring","text":"ped data frame containing pedigree information personID character.  Name column ped person ID variable momID character.  Name column ped mother ID variable dadID character.  Name column ped father ID variable","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countOffspring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count offspring of each individual — countOffspring","text":"data frame additional column, offspring,    contains number offspring individual","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countOffspring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count offspring of each individual — countOffspring","text":"","code":"library(BGmisc) data(\"potter\") countOffspring(potter,   personID = \"personID\",   momID = \"momID\", dadID = \"dadID\" ) #>    personID famID               name gen momID dadID spouseID sex offspring #> 1         1     1     Vernon Dursley   1   101   102        3   1         1 #> 2         2     1   Marjorie Dursley   1   101   102       NA   0         0 #> 3         3     1      Petunia Evans   1   103   104        1   0         1 #> 4         4     1         Lily Evans   1   103   104        5   0         1 #> 5         5     1       James Potter   1    NA    NA        4   1         1 #> 6         6     1     Dudley Dursley   2     3     1       NA   1         0 #> 7         7     1       Harry Potter   2     4     5        8   1         3 #> 8         8     1      Ginny Weasley   2    10     9        7   0         3 #> 9         9     1     Arthur Weasley   1    NA    NA       10   1         7 #> 10       10     1      Molly Prewett   1    NA    NA        9   0         7 #> 11       11     1        Ron Weasley   2    10     9       17   1         2 #> 12       12     1       Fred Weasley   2    10     9       NA   1         0 #> 13       13     1     George Weasley   2    10     9       NA   1         0 #> 14       14     1      Percy Weasley   2    10     9       20   1         2 #> 15       15     1    Charlie Weasley   2    10     9       NA   1         0 #> 16       16     1       Bill Weasley   2    10     9       18   1         3 #> 17       17     1   Hermione Granger   2    NA    NA       11   0         2 #> 18       18     1     Fleur Delacour   2   105   106       16   0         3 #> 19       19     1 Gabrielle Delacour   2   105   106       NA   0         0 #> 20       20     1     Audrey UNKNOWN   2    NA    NA       14   0         2 #> 21       21     1    James Potter II   3     8     7       NA   1         0 #> 22       22     1       Albus Potter   3     8     7       NA   1         0 #> 23       23     1        Lily Potter   3     8     7       NA   0         0 #> 24       24     1       Rose Weasley   3    17    11       NA   0         0 #> 25       25     1       Hugo Weasley   3    17    11       NA   1         0 #> 26       26     1   Victoire Weasley   3    18    16       NA   0         0 #> 27       27     1  Dominique Weasley   3    18    16       NA   0         0 #> 28       28     1      Louis Weasley   3    18    16       NA   1         0 #> 29       29     1      Molly Weasley   3    20    14       NA   0         0 #> 30       30     1       Lucy Weasley   3    20    14       NA   0         0 #> 31      101     1     Mother Dursley   0    NA    NA      102   0         2 #> 32      102     1     Father Dursley   0    NA    NA      101   1         2 #> 33      104     1       Father Evans   0    NA    NA      103   1         2 #> 34      103     1       Mother Evans   0    NA    NA      104   0         2 #> 35      106     1    Father Delacour   0    NA    NA      105   1         2 #> 36      105     1    Mother Delacour   0    NA    NA      106   0         2"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countSiblings.html","id":null,"dir":"Reference","previous_headings":"","what":"Count siblings of each individual — countSiblings","title":"Count siblings of each individual — countSiblings","text":"Count siblings individual","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countSiblings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count siblings of each individual — countSiblings","text":"","code":"countSiblings(ped, personID = \"ID\", momID = \"momID\", dadID = \"dadID\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countSiblings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count siblings of each individual — countSiblings","text":"ped data frame containing pedigree information personID character.  Name column ped person ID variable momID character.  Name column ped mother ID variable dadID character.  Name column ped father ID variable","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countSiblings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count siblings of each individual — countSiblings","text":"data frame additional column, siblings,        contains number siblings individual","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/countSiblings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count siblings of each individual — countSiblings","text":"","code":"library(BGmisc) data(\"potter\") countSiblings(potter, personID = \"personID\") #>    personID famID               name gen momID dadID spouseID sex parentsID #> 1         1     1     Vernon Dursley   1   101   102        3   1   101.102 #> 2         2     1   Marjorie Dursley   1   101   102       NA   0   101.102 #> 3         3     1      Petunia Evans   1   103   104        1   0   103.104 #> 4         4     1         Lily Evans   1   103   104        5   0   103.104 #> 5         5     1       James Potter   1    NA    NA        4   1      <NA> #> 6         6     1     Dudley Dursley   2     3     1       NA   1       3.1 #> 7         7     1       Harry Potter   2     4     5        8   1       4.5 #> 8         8     1      Ginny Weasley   2    10     9        7   0      10.9 #> 9         9     1     Arthur Weasley   1    NA    NA       10   1      <NA> #> 10       10     1      Molly Prewett   1    NA    NA        9   0      <NA> #> 11       11     1        Ron Weasley   2    10     9       17   1      10.9 #> 12       12     1       Fred Weasley   2    10     9       NA   1      10.9 #> 13       13     1     George Weasley   2    10     9       NA   1      10.9 #> 14       14     1      Percy Weasley   2    10     9       20   1      10.9 #> 15       15     1    Charlie Weasley   2    10     9       NA   1      10.9 #> 16       16     1       Bill Weasley   2    10     9       18   1      10.9 #> 17       17     1   Hermione Granger   2    NA    NA       11   0      <NA> #> 18       18     1     Fleur Delacour   2   105   106       16   0   105.106 #> 19       19     1 Gabrielle Delacour   2   105   106       NA   0   105.106 #> 20       20     1     Audrey UNKNOWN   2    NA    NA       14   0      <NA> #> 21       21     1    James Potter II   3     8     7       NA   1       8.7 #> 22       22     1       Albus Potter   3     8     7       NA   1       8.7 #> 23       23     1        Lily Potter   3     8     7       NA   0       8.7 #> 24       24     1       Rose Weasley   3    17    11       NA   0     17.11 #> 25       25     1       Hugo Weasley   3    17    11       NA   1     17.11 #> 26       26     1   Victoire Weasley   3    18    16       NA   0     18.16 #> 27       27     1  Dominique Weasley   3    18    16       NA   0     18.16 #> 28       28     1      Louis Weasley   3    18    16       NA   1     18.16 #> 29       29     1      Molly Weasley   3    20    14       NA   0     20.14 #> 30       30     1       Lucy Weasley   3    20    14       NA   0     20.14 #> 31      101     1     Mother Dursley   0    NA    NA      102   0      <NA> #> 32      102     1     Father Dursley   0    NA    NA      101   1      <NA> #> 34      103     1       Mother Evans   0    NA    NA      104   0      <NA> #> 33      104     1       Father Evans   0    NA    NA      103   1      <NA> #> 36      105     1    Mother Delacour   0    NA    NA      106   0      <NA> #> 35      106     1    Father Delacour   0    NA    NA      105   1      <NA> #>    siborder siblings #> 1         1        1 #> 2         2        1 #> 3         1        1 #> 4         2        1 #> 5         1        0 #> 6         1        0 #> 7         1        0 #> 8         1        6 #> 9         1        0 #> 10        1        0 #> 11        2        6 #> 12        3        6 #> 13        4        6 #> 14        5        6 #> 15        6        6 #> 16        7        6 #> 17        1        0 #> 18        1        1 #> 19        2        1 #> 20        1        0 #> 21        1        2 #> 22        2        2 #> 23        3        2 #> 24        1        1 #> 25        2        1 #> 26        1        2 #> 27        2        2 #> 28        3        2 #> 29        1        1 #> 30        2        1 #> 31        1        0 #> 32        1        0 #> 34        1        0 #> 33        1        0 #> 36        1        0 #> 35        1        0"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Labels to ggplot Pedigree Plot — .addLabels","title":"Add Labels to ggplot Pedigree Plot — .addLabels","text":"Add Labels ggplot Pedigree Plot","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Labels to ggplot Pedigree Plot — .addLabels","text":"","code":".addLabels(p, config)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Labels to ggplot Pedigree Plot — .addLabels","text":"p ggplot object. config list configuration options customizing plot. list can include: code_male Integer string. Value identifying males sex column. (typically 0 1) Default: 1. segment_spouse_color, segment_self_color, segment_sibling_color, segment_parent_color, segment_offspring_color Character. Line colors respective connection types. label_text_size, point_size, line_width Numeric. Controls text size, point size, line thickness. generation_height Numeric. Vertical spacing multiplier generations. Default: 1. shape_unknown, shape_female, shape_male, affected_shape Integers. Shape codes plotting group. sex_shape_labs Character vector labels sex variable. (default: c(\"Female\", \"Male\", \"Unknown\") unaffected, affected Values indicating unaffected/affected status. sex_color Logical. TRUE, uses color differentiate sex. label_max_overlaps Maximum number overlaps allowed repelled labels. label_segment_color Color used label connector lines.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Labels to ggplot Pedigree Plot — .addLabels","text":"ggplot object added labels.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addScales.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Scales to ggplot Pedigree Plot — .addScales","title":"Add Scales to ggplot Pedigree Plot — .addScales","text":"Add Scales ggplot Pedigree Plot","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addScales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Scales to ggplot Pedigree Plot — .addScales","text":"","code":".addScales(p, config, status_col = NULL)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addScales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Scales to ggplot Pedigree Plot — .addScales","text":"p ggplot object. config list configuration options customizing plot. list can include: code_male Integer string. Value identifying males sex column. (typically 0 1) Default: 1. segment_spouse_color, segment_self_color, segment_sibling_color, segment_parent_color, segment_offspring_color Character. Line colors respective connection types. label_text_size, point_size, line_width Numeric. Controls text size, point size, line thickness. generation_height Numeric. Vertical spacing multiplier generations. Default: 1. shape_unknown, shape_female, shape_male, affected_shape Integers. Shape codes plotting group. sex_shape_labs Character vector labels sex variable. (default: c(\"Female\", \"Male\", \"Unknown\") unaffected, affected Values indicating unaffected/affected status. sex_color Logical. TRUE, uses color differentiate sex. label_max_overlaps Maximum number overlaps allowed repelled labels. label_segment_color Color used label connector lines. status_col Character string specifying column name affected status. Defaults NULL.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/dot-addScales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Scales to ggplot Pedigree Plot — .addScales","text":"ggplot object added scales.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/generateSpouseList.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a spouselist matrix — generateSpouseList","title":"Generate a spouselist matrix — generateSpouseList","text":"Generate spouselist matrix","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/generateSpouseList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a spouselist matrix — generateSpouseList","text":"","code":"generateSpouseList(   ped,   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   spouseID = \"spouseID\" )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/generateSpouseList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a spouselist matrix — generateSpouseList","text":"ped data frame containing pedigree information personID Character. Name column ped person ID variable momID Character. Name column ped mother ID variable dadID Character. Name column ped father ID variable spouseID Character. Name column ped spouse ID variable","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/generateSpouseList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a spouselist matrix — generateSpouseList","text":"spouselist matrix","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/generateSpouseList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a spouselist matrix — generateSpouseList","text":"","code":"library(BGmisc) data(\"potter\") generateSpouseList(potter,   personID = \"personID\",   momID = \"momID\", dadID = \"dadID\", spouseID = \"spouseID\" ) #>       ID1 ID2 sex1 sex2 #>  [1,] 101 102    0    1 #>  [2,] 103 104    0    1 #>  [3,]   3   1    0    1 #>  [4,]   4   5    0    1 #>  [5,]  10   9    0    1 #>  [6,] 105 106    0    1 #>  [7,]   8   7    0    1 #>  [8,]  17  11    0    1 #>  [9,]  18  16    0    1 #> [10,]  20  14    0    1"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getMidpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute midpoints across grouped coordinates — getMidpoints","title":"Compute midpoints across grouped coordinates — getMidpoints","text":"flexible utility function compute x y midpoints groups individuals using specified method. Used support positioning logic sibling groups, parental dyads, spousal pairs pedigree layouts.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getMidpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute midpoints across grouped coordinates — getMidpoints","text":"","code":"getMidpoints(   data,   group_vars,   x_vars,   y_vars,   x_out,   y_out,   method = \"mean\",   require_non_missing = group_vars )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getMidpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute midpoints across grouped coordinates — getMidpoints","text":"data `data.frame` containing coordinate grouping variables. group_vars Character vector. Names grouping variables. x_vars Character vector. Names x-coordinate variables averaged. y_vars Character vector. Names y-coordinate variables averaged. x_out Character. Name output column x-coordinate midpoint. y_out Character. Name output column y-coordinate midpoint. method Character. Method calculating midpoints. Options include: `\"mean\"`: Arithmetic mean coordinates. `\"median\"`: Median coordinates. `\"weighted_mean\"`: Weighted mean coordinates. `\"first_pair\"`: Mean first pair coordinates. `\"meanxfirst\"`: Mean x-coordinates first y-coordinate. `\"meanyfirst\"`: Mean y-coordinates first x-coordinate. require_non_missing Character vector. Names variables must missing row included.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getMidpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute midpoints across grouped coordinates — getMidpoints","text":"`data.frame` grouped `group_vars` new columns `x_out` `y_out` containing midpoint coordinates.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getRelativeCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get coordinate positions of relatives for each individual — getRelativeCoordinates","title":"Get coordinate positions of relatives for each individual — getRelativeCoordinates","text":"Helper function used retrieve x y coordinates specified relative (e.g., mom, dad, spouse) join main connection table. supports relative-specific positioning downstream layout functions like `calculateConnections()`.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getRelativeCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get coordinate positions of relatives for each individual — getRelativeCoordinates","text":"","code":"getRelativeCoordinates(   ped,   connections,   relativeIDvar,   x_name,   y_name,   personID = \"personID\",   multiple = \"all\",   only_unique = TRUE )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getRelativeCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get coordinate positions of relatives for each individual — getRelativeCoordinates","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns connections `data.frame` containing individuals associated relative IDs. relativeIDvar Character. Name column `connections` relative ID variable. x_name Character. Name new column store x-coordinate relative. y_name Character. Name new column store y-coordinate relative. personID Character string specifying column name individual IDs. multiple Character. Specifies handle multiple matches. Options \"\" \"\". only_unique Logical. TRUE, return unique rows. Defaults TRUE.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/getRelativeCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get coordinate positions of relatives for each individual — getRelativeCoordinates","text":"`data.frame` columns: `personID`, `relativeIDvar` `x_name`, `y_name`: Coordinates specified relative Optionally, `newID` present `ped`","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Core Function for ggPedigree — ggPedigree.core","title":"Core Function for ggPedigree — ggPedigree.core","text":"function core implementation ggPedigree function. handles data preparation, layout calculation, plotting pedigree diagram. intended called directly users.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core Function for ggPedigree — ggPedigree.core","text":"","code":"ggPedigree.core(   ped,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   status_col = NULL,   config = list(),   debug = FALSE,   hints = NULL,   ... )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core Function for ggPedigree — ggPedigree.core","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns famID Character string specifying column name family IDs. personID Character string specifying column name individual IDs. momID Character string specifying column name mother IDs. Defaults \"momID\". dadID Character string specifying column name father IDs. Defaults \"dadID\". status_col Character string specifying column name affected status. Defaults NULL. config list configuration options customizing plot. list can include: code_male Integer string. Value identifying males sex column. (typically 0 1) Default: 1. segment_spouse_color, segment_self_color, segment_sibling_color, segment_parent_color, segment_offspring_color Character. Line colors respective connection types. label_text_size, point_size, line_width Numeric. Controls text size, point size, line thickness. generation_height Numeric. Vertical spacing multiplier generations. Default: 1. shape_unknown, shape_female, shape_male, affected_shape Integers. Shape codes plotting group. sex_shape_labs Character vector labels sex variable. (default: c(\"Female\", \"Male\", \"Unknown\") unaffected, affected Values indicating unaffected/affected status. sex_color Logical. TRUE, uses color differentiate sex. label_max_overlaps Maximum number overlaps allowed repelled labels. label_segment_color Color used label connector lines. debug Logical. TRUE, prints debugging information. Default: FALSE. hints Data frame hints layout adjustments. Default: NULL. ... Additional arguments passed `ggplot2` functions.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a custom pedigree diagram — ggPedigree","title":"Plot a custom pedigree diagram — ggPedigree","text":"Generates ggplot2-based diagram pedigree using custom coordinate layout, calculated relationship connections, flexible styling via `config`. processes data using `ped2fam()`. function supports multiple families optionally displays affected status sex-based color/shape.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a custom pedigree diagram — ggPedigree","text":"","code":"ggPedigree(   ped,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   status_col = NULL,   tooltip_cols = NULL,   as_widget = FALSE,   config = list(),   debug = FALSE,   hints = NULL,   interactive = FALSE,   ... )  ggpedigree(   ped,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   status_col = NULL,   tooltip_cols = NULL,   as_widget = FALSE,   config = list(),   debug = FALSE,   hints = NULL,   interactive = FALSE,   ... )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a custom pedigree diagram — ggPedigree","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns famID Character string specifying column name family IDs. personID Character string specifying column name individual IDs. momID Character string specifying column name mother IDs. Defaults \"momID\". dadID Character string specifying column name father IDs. Defaults \"dadID\". status_col Character string specifying column name affected status. Defaults NULL. tooltip_cols Character vector column names show hovering. Defaults c(\"personID\", \"sex\").  Additional columns present `ped` can supplied – added Plotly tooltip text. as_widget Logical; TRUE (default) returns plotly htmlwidget. FALSE, returns underlying plotly object (useful customization printing). config list configuration options customizing plot. list can include: code_male Integer string. Value identifying males sex column. (typically 0 1) Default: 1. segment_spouse_color, segment_self_color, segment_sibling_color, segment_parent_color, segment_offspring_color Character. Line colors respective connection types. label_text_size, point_size, line_width Numeric. Controls text size, point size, line thickness. generation_height Numeric. Vertical spacing multiplier generations. Default: 1. shape_unknown, shape_female, shape_male, affected_shape Integers. Shape codes plotting group. sex_shape_labs Character vector labels sex variable. (default: c(\"Female\", \"Male\", \"Unknown\") unaffected, affected Values indicating unaffected/affected status. sex_color Logical. TRUE, uses color differentiate sex. label_max_overlaps Maximum number overlaps allowed repelled labels. label_segment_color Color used label connector lines. debug Logical. TRUE, prints debugging information. Default: FALSE. hints Data frame hints layout adjustments. Default: NULL. interactive Logical. TRUE, generates interactive plot using `plotly`. Default: FALSE. ... Additional arguments passed `ggplot2` functions.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a custom pedigree diagram — ggPedigree","text":"`ggplot` object rendering pedigree diagram.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a custom pedigree diagram — ggPedigree","text":"","code":"library(BGmisc) data(\"potter\") ggPedigree(potter, famID = \"famID\", personID = \"personID\")   data(\"hazard\") ggPedigree(hazard, famID = \"famID\", personID = \"ID\", config = list(code_male = 0))"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigreeInteractive.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","title":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","text":"Generates interactive HTML widget built top static ggPedigree output.  layout, styling, connection logic inherited ggPedigree(); function simply augments plot Plotly hover, zoom, pan functionality.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigreeInteractive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","text":"","code":"ggPedigreeInteractive(   ped,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   status_col = NULL,   tooltip_cols = NULL,   config = list(),   debug = FALSE,   as_widget = TRUE,   ... )  ggpedigreeinteractive(   ped,   famID = \"famID\",   personID = \"personID\",   momID = \"momID\",   dadID = \"dadID\",   status_col = NULL,   tooltip_cols = NULL,   config = list(),   debug = FALSE,   as_widget = TRUE,   ... )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigreeInteractive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","text":"ped data frame containing pedigree data. Needs personID, momID, dadID columns famID Character string specifying column name family IDs. personID Character string specifying column name individual IDs. momID Character string specifying column name mother IDs. Defaults \"momID\". dadID Character string specifying column name father IDs. Defaults \"dadID\". status_col Character string specifying column name affected status. Defaults NULL. tooltip_cols Character vector column names show hovering. Defaults c(\"personID\", \"sex\").  Additional columns present `ped` can supplied – added Plotly tooltip text. config list configuration options customizing plot. list can include: code_male Integer string. Value identifying males sex column. (typically 0 1) Default: 1. segment_spouse_color, segment_self_color, segment_sibling_color, segment_parent_color, segment_offspring_color Character. Line colors respective connection types. label_text_size, point_size, line_width Numeric. Controls text size, point size, line thickness. generation_height Numeric. Vertical spacing multiplier generations. Default: 1. shape_unknown, shape_female, shape_male, affected_shape Integers. Shape codes plotting group. sex_shape_labs Character vector labels sex variable. (default: c(\"Female\", \"Male\", \"Unknown\") unaffected, affected Values indicating unaffected/affected status. sex_color Logical. TRUE, uses color differentiate sex. label_max_overlaps Maximum number overlaps allowed repelled labels. label_segment_color Color used label connector lines. debug Logical. TRUE, prints debugging information. Default: FALSE. as_widget Logical; TRUE (default) returns plotly htmlwidget. FALSE, returns underlying plotly object (useful customization printing). ... Additional arguments passed `ggplot2` functions.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigreeInteractive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","text":"plotly htmlwidget (plotly object `as_widget = FALSE`).","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggPedigreeInteractive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive pedigree plot (Plotly wrapper around ggPedigree) — ggPedigreeInteractive","text":"","code":"library(BGmisc) data(\"potter\") ggPedigreeInteractive(potter, famID = \"famID\", personID = \"personID\")  {\"x\":{\"data\":[{\"x\":[2.0000000000001004,1.0000000000001297,null,null,0,null,1.0000000000001297,2.0000000000001004,null,2.9999999999995848,3.9999999999998463,null,3.9999999999998463,2.9999999999995848,null,null,1.4999999848507406,null,4.0000000000283578,3.0000000000283533,null,3.0000000000283533,4.0000000000283578,null,8.4999995767008052,7.4999995767008061,null,7.4999995767008061,8.4999995767008052,null,6.0000000000289662,5.0000000000283578,null,null,7.000000000028991,null,null,8.0000000000289937,null,10.000000000079746,9.0000000000289724,null,null,11.000000000000046,null,12.999999999999998,11.999999999999998,null,5.0000000000283578,6.0000000000289662,null,11.999999999999998,12.999999999999998,null,null,14,null,9.0000000000289724,10.000000000079746,null,null,2.2247447070005224,null,null,3.2247447070005189,null,null,4.2247447070005144,null,null,5.2247447070004256,null,null,6.2247447069964945,null,null,11.499999351567922,null,null,12.499999351567922,null,null,13.49999935156792,null,null,8.9999997314386615,null,null,9.9999997314386579,null,-6.1665772376962525e-09,0.99999999383342286,null,0.99999999383342286,-6.1665772376962525e-09,null,2.499999915148158,3.4999999151481966,null,3.4999999151481966,2.499999915148158,null,12.999999618162414,13.999999618162414,null,13.999999618162414,12.999999618162414],\"y\":[-2,-2,null,null,-2,null,-2,-2,null,-2,-2,null,-2,-2,null,null,-3,null,-3,-3,null,-3,-3,null,-2,-2,null,-2,-2,null,-3,-3,null,null,-3,null,null,-3,null,-3,-3,null,null,-3,null,-3,-3,null,-3,-3,null,-3,-3,null,null,-3,null,-3,-3,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,null,-4,null,-1,-1,null,-1,-1,null,-1,-1,null,-1,-1,null,-2,-2,null,-2,-2],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.50000000000006484,0.49999999383342281,null,0.50000000000006484,0.49999999383342281,null,2.9999999999999734,2.9999999151481775,null,2.9999999999999734,2.9999999151481775,null,null,null,null,1.4999999848507406,1.500000000000115,null,3.0000000000283533,3.4999999999997158,null,8.0000000000205311,7.9999995767008052,null,null,null,null,null,null,null,8.0000000000205311,7.9999995767008052,null,8.0000000000205311,7.9999995767008052,null,8.0000000000205311,7.9999995767008052,null,8.0000000000205311,7.9999995767008052,null,8.0000000000205311,7.9999995767008052,null,8.0000000000205311,7.9999995767008052,null,null,null,null,13.5,13.499999618162414,null,13.5,13.499999618162414,null,null,null,null,3.2247447070005184,3.5000000000283555,null,3.2247447070005184,3.5000000000283555,null,3.2247447070005184,3.5000000000283555,null,5.7247447069984601,5.5000000000286615,null,5.7247447069984601,5.5000000000286615,null,12.499999351567922,12.499999999999998,null,12.499999351567922,12.499999999999998,null,12.499999351567922,12.499999999999998,null,9.4999997314386597,9.5000000000543601,null,9.4999997314386597,9.5000000000543601,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"y\":[-1.5,-1,null,-1.5,-1,null,-1.5,-1,null,-1.5,-1,null,null,null,null,-2.5,-2,null,-2.5,-2,null,-2.5,-2,null,null,null,null,null,null,null,-2.5,-2,null,-2.5,-2,null,-2.5,-2,null,-2.5,-2,null,-2.5,-2,null,-2.5,-2,null,null,null,null,-2.5,-2,null,-2.5,-2,null,null,null,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,-3.5,-3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.0000000000001297,0.50000000000006484,null,0,0.50000000000006484,null,2.0000000000001004,2.9999999999999734,null,3.9999999999998463,2.9999999999999734,null,2.9999999999995848,null,null,1.4999999848507406,1.4999999848507406,null,3.0000000000283533,3.0000000000283533,null,4.0000000000283578,8.0000000000205311,null,7.4999995767008061,null,null,8.4999995767008052,null,null,5.0000000000283578,8.0000000000205311,null,7.000000000028991,8.0000000000205311,null,8.0000000000289937,8.0000000000205311,null,9.0000000000289724,8.0000000000205311,null,11.000000000000046,8.0000000000205311,null,11.999999999999998,8.0000000000205311,null,6.0000000000289662,null,null,12.999999999999998,13.5,null,14,13.5,null,10.000000000079746,null,null,2.2247447070005224,3.2247447070005184,null,3.2247447070005189,3.2247447070005184,null,4.2247447070005144,3.2247447070005184,null,5.2247447070004256,5.7247447069984601,null,6.2247447069964945,5.7247447069984601,null,11.499999351567922,12.499999351567922,null,12.499999351567922,12.499999351567922,null,13.49999935156792,12.499999351567922,null,8.9999997314386615,9.4999997314386597,null,9.9999997314386579,9.4999997314386597,null,0.99999999383342286,null,null,-6.1665772376962525e-09,null,null,3.4999999151481966,null,null,2.499999915148158,null,null,13.999999618162414,null,null,12.999999618162414,null],\"y\":[-1.5,-1.5,null,-1.5,-1.5,null,-1.5,-1.5,null,-1.5,-1.5,null,-1.5,null,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,-2.5,null,-1.5,null,null,-1.5,null,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,null,null,-2.5,-2.5,null,-2.5,-2.5,null,-2.5,null,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-3.5,-3.5,null,-0.5,null,null,-0.5,null,null,-0.5,null,null,-0.5,null,null,-1.5,null,null,-1.5,null],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.0000000000001297,1.0000000000001297,null,0,0,null,2.0000000000001004,2.0000000000001004,null,3.9999999999998463,3.9999999999998463,null,2.9999999999995848,2.9999999999995848,null,1.4999999848507406,1.4999999848507406,null,3.0000000000283533,3.0000000000283533,null,4.0000000000283578,4.0000000000283578,null,7.4999995767008061,7.4999995767008061,null,8.4999995767008052,8.4999995767008052,null,5.0000000000283578,5.0000000000283578,null,7.000000000028991,7.000000000028991,null,8.0000000000289937,8.0000000000289937,null,9.0000000000289724,9.0000000000289724,null,11.000000000000046,11.000000000000046,null,11.999999999999998,11.999999999999998,null,6.0000000000289662,6.0000000000289662,null,12.999999999999998,12.999999999999998,null,14,14,null,10.000000000079746,10.000000000079746,null,2.2247447070005224,2.2247447070005224,null,3.2247447070005189,3.2247447070005189,null,4.2247447070005144,4.2247447070005144,null,5.2247447070004256,5.2247447070004256,null,6.2247447069964945,6.2247447069964945,null,11.499999351567922,11.499999351567922,null,12.499999351567922,12.499999351567922,null,13.49999935156792,13.49999935156792,null,8.9999997314386615,8.9999997314386615,null,9.9999997314386579,9.9999997314386579,null,0.99999999383342286,0.99999999383342286,null,-6.1665772376962525e-09,-6.1665772376962525e-09,null,3.4999999151481966,3.4999999151481966,null,2.499999915148158,2.499999915148158,null,13.999999618162414,13.999999618162414,null,12.999999618162414,12.999999618162414],\"y\":[-1.5,-2,null,-1.5,-2,null,-1.5,-2,null,-1.5,-2,null,null,-2,null,-2.5,-3,null,-2.5,-3,null,-2.5,-3,null,null,-2,null,null,-2,null,-2.5,-3,null,-2.5,-3,null,-2.5,-3,null,-2.5,-3,null,-2.5,-3,null,-2.5,-3,null,null,-3,null,-2.5,-3,null,-2.5,-3,null,null,-3,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,-3.5,-4,null,null,-1,null,null,-1,null,null,-1,null,null,-1,null,null,-2,null,null,-2],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0,2.0000000000001004,3.9999999999998463,4.0000000000283578,8.4999995767008052,6.0000000000289662,12.999999999999998,14,10.000000000079746,4.2247447070005144,5.2247447070004256,11.499999351567922,12.499999351567922,8.9999997314386615,9.9999997314386579,0.99999999383342286,3.4999999151481966,13.999999618162414],\"y\":[-2,-2,-2,-3,-2,-3,-3,-3,-3,-4,-4,-4,-4,-4,-4,-1,-1,-2],\"text\":[\"personID: 2<br>sex: 0\",\"personID: 3<br>sex: 0\",\"personID: 4<br>sex: 0\",\"personID: 8<br>sex: 0\",\"personID: 10<br>sex: 0\",\"personID: 17<br>sex: 0\",\"personID: 18<br>sex: 0\",\"personID: 19<br>sex: 0\",\"personID: 20<br>sex: 0\",\"personID: 23<br>sex: 0\",\"personID: 24<br>sex: 0\",\"personID: 26<br>sex: 0\",\"personID: 27<br>sex: 0\",\"personID: 29<br>sex: 0\",\"personID: 30<br>sex: 0\",\"personID: 101<br>sex: 0\",\"personID: 104<br>sex: 1\",\"personID: 106<br>sex: 1\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":1,\"size\":15.118110236220474,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"0\",\"legendgroup\":\"0\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1.0000000000001297,2.9999999999995848,1.4999999848507406,3.0000000000283533,7.4999995767008061,5.0000000000283578,7.000000000028991,8.0000000000289937,9.0000000000289724,11.000000000000046,11.999999999999998,2.2247447070005224,3.2247447070005189,6.2247447069964945,13.49999935156792,-6.1665772376962525e-09,2.499999915148158,12.999999618162414],\"y\":[-2,-2,-3,-3,-2,-3,-3,-3,-3,-3,-3,-4,-4,-4,-4,-1,-1,-2],\"text\":[\"personID: 1<br>sex: 1\",\"personID: 5<br>sex: 1\",\"personID: 6<br>sex: 1\",\"personID: 7<br>sex: 1\",\"personID: 9<br>sex: 1\",\"personID: 11<br>sex: 1\",\"personID: 12<br>sex: 1\",\"personID: 13<br>sex: 1\",\"personID: 14<br>sex: 1\",\"personID: 15<br>sex: 1\",\"personID: 16<br>sex: 1\",\"personID: 21<br>sex: 1\",\"personID: 22<br>sex: 1\",\"personID: 25<br>sex: 1\",\"personID: 28<br>sex: 1\",\"personID: 102<br>sex: 1\",\"personID: 103<br>sex: 0\",\"personID: 105<br>sex: 0\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":1,\"size\":15.118110236220474,\"symbol\":\"square\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"1\",\"legendgroup\":\"1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":23.305936073059364,\"r\":7.3059360730593621,\"b\":10.958904109589042,\"l\":10.958904109589042},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.70000000647490612,14.700000000308329],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"5\",\"10\"],\"tickvals\":[0,5,10],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"5\",\"10\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":false,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-4.1749999999999998,-0.32499999999999996],\"tickmode\":\"array\",\"ticktext\":[\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[-1,-2,-3,-4],\"categoryorder\":\"array\",\"categoryarray\":[\"1\",\"2\",\"3\",\"4\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":false,\"tickfont\":{\"color\":null,\"family\":null,\"size\":0},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Sex\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"1d36199e5aaa\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{},\"type\":\"scatter\"},\"1d36779cc6a5\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{}},\"1d3655068df\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{}},\"1d36c90aeee\":{\"x\":{},\"y\":{},\"xend\":{},\"yend\":{}},\"1d3635bba0e2\":{\"x\":{},\"y\":{},\"colour\":{},\"shape\":{},\"text\":{}}},\"cur_data\":\"1d36199e5aaa\",\"visdat\":{\"1d36199e5aaa\":[\"function (y) \",\"x\"],\"1d36779cc6a5\":[\"function (y) \",\"x\"],\"1d3655068df\":[\"function (y) \",\"x\"],\"1d36c90aeee\":[\"function (y) \",\"x\"],\"1d3635bba0e2\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Core Function for ggRelatednessMatrix — ggRelatednessMatrix.core","title":"Core Function for ggRelatednessMatrix — ggRelatednessMatrix.core","text":"function core implementation ggRelatednessMatrix function. handles data preparation, layout calculation, plotting pedigree diagram. intended called directly users.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core Function for ggRelatednessMatrix — ggRelatednessMatrix.core","text":"","code":"ggRelatednessMatrix.core(mat, config = list(), ...)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Core Function for ggRelatednessMatrix — ggRelatednessMatrix.core","text":"mat square numeric matrix relatedness values (precomputed, e.g., ped2add). config list graphical display parameters. See Details available options. ... Additional arguments passed ggplot2 layers.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"Plots relatedness matrix using ggplot2 config options.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"","code":"ggRelatednessMatrix(   mat,   config = list(),   interactive = FALSE,   tooltip_cols = NULL,   ... )  ggrelatednessmatrix(   mat,   config = list(),   interactive = FALSE,   tooltip_cols = NULL,   ... )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"mat square numeric matrix relatedness values (precomputed, e.g., ped2add). config list graphical display parameters. See Details available options. interactive Logical; TRUE, returns interactive plotly object. tooltip_cols character vector column names include tooltips. ... Additional arguments passed ggplot2 layers.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"ggplot object displaying relatedness matrix heatmap.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"Config options include: color_palette vector colors heatmap (default: Reds scale) scale_midpoint Numeric midpoint diverging color scale (default: 0.25) title Plot title cluster Logical; rows/cols clustered (default: TRUE) xlab, ylab Axis labels text_size Axis text size","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggRelatednessMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a relatedness matrix as a heatmap (ggpedigree style) — ggRelatednessMatrix","text":"","code":"# Example relatedness matrix set.seed(123) mat <- matrix(runif(100, 0, 1), nrow = 10) rownames(mat) <- paste0(\"ID\", 1:10) colnames(mat) <- paste0(\"ID\", 1:10)  # Plot the relatedness matrix ggRelatednessMatrix(mat,   config = list(     color_palette = c(\"white\", \"gold\", \"red\"),     scale_midpoint = 0.5,     cluster = TRUE,     title = \"Relatedness Matrix\",     xlab = \"Individuals\",     ylab = \"Individuals\",     text_size = 8   ) )"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggpedigree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpedigree: Visualizing Pedigrees with 'ggplot2' and 'plotly' — ggpedigree-package","title":"ggpedigree: Visualizing Pedigrees with 'ggplot2' and 'plotly' — ggpedigree-package","text":"Provides plotting functions visualizing pedigrees behavior genetics kinship research. package complements 'BGmisc' [Garrison et al. (2024) doi:10.21105/joss.06203 ] rendering pedigrees using 'ggplot2' framework offers modern alternative base-graphics pedigree plot 'kinship2' [Sinnwell et al. (2014) doi:10.1159/000363105 ]. Features include support duplicated individuals, complex mating structures, integration simulated pedigrees, layout customization.","code":""},{"path":[]},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/ggpedigree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggpedigree: Visualizing Pedigrees with 'ggplot2' and 'plotly' — ggpedigree-package","text":"Maintainer: S. Mason Garrison garrissm@wfu.edu (ORCID) [copyright holder]","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/makeSymmetricKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a symmetric key for two IDs — makeSymmetricKey","title":"Generate a symmetric key for two IDs — makeSymmetricKey","text":"function generates symmetric key two IDs, ensuring order IDs matter.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/makeSymmetricKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a symmetric key for two IDs — makeSymmetricKey","text":"","code":"makeSymmetricKey(id1, id2, sep = \".\")"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/makeSymmetricKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a symmetric key for two IDs — makeSymmetricKey","text":"id1 First ID id2 Second ID sep Separator use IDs","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/makeSymmetricKey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a symmetric key for two IDs — makeSymmetricKey","text":"string representing symmetric key","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/processExtras.html","id":null,"dir":"Reference","previous_headings":"","what":"Process duplicate appearances of individuals in a pedigree layout — processExtras","title":"Process duplicate appearances of individuals in a pedigree layout — processExtras","text":"Resolves layout conflicts individual appears multiple places (e.g., due inbreeding loops). Keeps layout point closest relevant relative (mom, dad, spouse) removes links others avoid confusion visualization.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/processExtras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process duplicate appearances of individuals in a pedigree layout — processExtras","text":"","code":"processExtras(ped, config = list())"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/processExtras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process duplicate appearances of individuals in a pedigree layout — processExtras","text":"ped data.frame containing pedigree layout info columns including: `personID`, `x_pos`, `y_pos`, `dadID`, `momID`, logical column `extra`. config list configuration options. Currently unused passed internal helpers.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/processExtras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process duplicate appearances of individuals in a pedigree layout — processExtras","text":"modified `ped` data.frame updated coordinates removed duplicates.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/redsquirrels.html","id":null,"dir":"Reference","previous_headings":"","what":"Kluane Red Squirrel Data — redsquirrels","title":"Kluane Red Squirrel Data — redsquirrels","text":"tidy data frame life‐history reproductive metrics 7,799 individual red squirrels Kluane Red Squirrel Project (1987–present). row corresponds one squirrel associated pedigree links reproductive success summaries. original data published CC0 1.0 Universal Public Domain Dedication:","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/redsquirrels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kluane Red Squirrel Data — redsquirrels","text":"","code":"data(redsquirrels)"},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/redsquirrels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Kluane Red Squirrel Data — redsquirrels","text":"## `redsquirrels` data frame 7799 rows 16 columns: personID Unique identifier squirrel momID, dadID Unique identifiers squirrel's parents sex Biological sex squirrel famID Unique identifier family. Derived ped2fam byear Birth year squirrel dyear Death year squirrel lrs lifetime reproductive success squirrel ars_mean Mean annual reproductive success squirrel ars_max Maximum ARS value squirrel ars_med Median ARS value squirrel ars_min Minimum ARS value squirrel ars_sd Standard deviation ARS values squirrel ars_n Number ARS values squirrel year_first First year ARS data squirrel year_last Last year ARS data squirrel","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/redsquirrels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Kluane Red Squirrel Data — redsquirrels","text":"<https://doi.org/10.5061/dryad.n5q05>","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/reference/redsquirrels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kluane Red Squirrel Data — redsquirrels","text":"McFarlane, S. Eryn; Boutin, Stan; Humphries, Murray M. et al. (2015). Data : low levels direct additive genetic variance fitness fitness components red squirrel population [Dataset]. Dryad. <https://doi.org/10.5061/dryad.n5q05>","code":""},{"path":[]},{"path":"https://r-computing-lab.github.io/ggpedigree/news/index.html","id":"status-active-0-4-0","dir":"Changelog","previous_headings":"","what":"Status: Active","title":"ggpedigree 0.4.0","text":"Allows support character-based IDs Added linejoin, lineend, segment_self_linetype, option ggpedigree functions. Added unit tests calculateConnections, calculateConnections, ggpedigree functions. Refactored ggpedigree function ggpedigree.core .addScales .addLabels functions improve readability maintainability. Renamed symKey makeSymmetricKey, extended support character-based IDs, added unit tests. Added new function ggPedigreeInteractive create interactive pedigree plots using plotly. Added vignette demonstrate usage. Added redsquirrels dataset package testing examples. Added new function ggRelatednessMatrix subfunction ggRelatednessMatrix.core create heatmaps relatedness matrices. Added new vignette demonstrate ggRelatednessMatrix Added graphic tests ggpedigree, ggPedigreeInteractive, ggRelatednessMatrix functions. Updated README vignettes reflect new features improvements. Updated description comply CRAN policies.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/news/index.html","id":"ggpedigree-030","dir":"Changelog","previous_headings":"","what":"ggpedigree 0.3.0","title":"ggpedigree 0.3.0","text":"Expose labeling options ggpedigree function allow customization, including nudging labels, changing variable used. Added option add outline pedigree plot. Made config options consistent user-friendly. Enhance narrative plotting vignette demonstrate new features provide clearer examples. Added missing examples ggpedigree function documentation.","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/news/index.html","id":"ggpedigree-020","dir":"Changelog","previous_headings":"","what":"ggpedigree 0.2.0","title":"ggpedigree 0.2.0","text":"Extended functionality include new plotting features, like handling multiple instances individual pedigree. Improved documentation examples better user guidance. Added unit tests describeHelpers","code":""},{"path":"https://r-computing-lab.github.io/ggpedigree/news/index.html","id":"ggpedigree-010","dir":"Changelog","previous_headings":"","what":"ggpedigree 0.1.0","title":"ggpedigree 0.1.0","text":"Implemented pedigree plotting functions ggplot2. Added vignette demonstrate use package basic plotting. Created DESCRIPTION file define package dependencies. Added LICENSE file specify terms package can used. Created CODE_OF_CONDUCT.md file outline expected behavior contributors maintainers. Added NEWS.md file track changes package. Created CONTRIBUTING.md file guide contributors contribute package. Added README.Rmd file provide overview package functions. Added cran-comments.md file document submission process CRAN. Initial version launched","code":""}]
